// <auto-generated />
using System;
using EpsSchool.infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EpsSchool.Infra.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20210406221046_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EpsSchool.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a31d0ef3-6871-445f-acc0-b77c9a18d1e5"),
                            Name = "Informatica"
                        },
                        new
                        {
                            Id = new Guid("883c4831-0201-4529-b533-d8453ffe545b"),
                            Name = "Manutenção de Micros"
                        },
                        new
                        {
                            Id = new Guid("56ca4cd3-743c-4f5e-a37a-90e72d67081f"),
                            Name = "Redes de Computadores"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CoursesSubjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed3b1dee-f400-43a7-931a-cf083cd67dce"),
                            CourseId = new Guid("a31d0ef3-6871-445f-acc0-b77c9a18d1e5"),
                            SubjectId = new Guid("1d7fd6ca-fbdf-4919-89f3-065a824b20ed")
                        },
                        new
                        {
                            Id = new Guid("518ce648-0333-42ad-89cf-0535cdddf639"),
                            CourseId = new Guid("a31d0ef3-6871-445f-acc0-b77c9a18d1e5"),
                            SubjectId = new Guid("8b035092-aba4-41cd-bb1b-0a775790f017")
                        },
                        new
                        {
                            Id = new Guid("3b6ce767-fa01-4566-80b4-da1d204d42fc"),
                            CourseId = new Guid("a31d0ef3-6871-445f-acc0-b77c9a18d1e5"),
                            SubjectId = new Guid("a14008d6-f7b7-46a2-9920-619039ef22c6")
                        },
                        new
                        {
                            Id = new Guid("63b6c6f3-c29b-4e9a-b315-2d0fb2496c18"),
                            CourseId = new Guid("883c4831-0201-4529-b533-d8453ffe545b"),
                            SubjectId = new Guid("daa0d0b6-597f-4c46-aa3b-7ece5a65e61d")
                        },
                        new
                        {
                            Id = new Guid("bba58a25-a7b5-44d1-a276-0fd651502a79"),
                            CourseId = new Guid("883c4831-0201-4529-b533-d8453ffe545b"),
                            SubjectId = new Guid("8b035092-aba4-41cd-bb1b-0a775790f017")
                        },
                        new
                        {
                            Id = new Guid("4b6df1ce-ddf1-4f35-a421-ce7c0a4a7fc9"),
                            CourseId = new Guid("56ca4cd3-743c-4f5e-a37a-90e72d67081f"),
                            SubjectId = new Guid("1d7fd6ca-fbdf-4919-89f3-065a824b20ed")
                        },
                        new
                        {
                            Id = new Guid("f87ce61f-d955-40b8-9522-d1095888b040"),
                            CourseId = new Guid("56ca4cd3-743c-4f5e-a37a-90e72d67081f"),
                            SubjectId = new Guid("8b035092-aba4-41cd-bb1b-0a775790f017")
                        },
                        new
                        {
                            Id = new Guid("a5a4d521-f5c7-4935-9ee9-e050cb0fe2ab"),
                            CourseId = new Guid("56ca4cd3-743c-4f5e-a37a-90e72d67081f"),
                            SubjectId = new Guid("4c8175d1-da55-4f75-aebf-baf3dba8bdde")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9934948a-1985-4ec5-97c3-18a7dc481d41"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Joana",
                            PhoneNumber = "33556699",
                            Registration = "21068380",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(6511),
                            Status = true,
                            Surname = "Alves"
                        },
                        new
                        {
                            Id = new Guid("58527147-3315-4c6d-93b4-82543d3d06b7"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fernanda",
                            PhoneNumber = "33447789",
                            Registration = "21060138",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(8322),
                            Status = true,
                            Surname = "Silva"
                        },
                        new
                        {
                            Id = new Guid("4a8730d5-b447-4c0a-b2fa-2950dcb4b819"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vanessa",
                            PhoneNumber = "99562341",
                            Registration = "21061327",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(8444),
                            Status = true,
                            Surname = "Lisboa"
                        },
                        new
                        {
                            Id = new Guid("9dab1d50-9c21-4c04-a097-b0eaaf7cb218"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Maria",
                            PhoneNumber = "99452417",
                            Registration = "21065985",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(8558),
                            Status = true,
                            Surname = "Madalena"
                        },
                        new
                        {
                            Id = new Guid("25d44203-6897-4c6c-8ec0-fe689be09bd9"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "João",
                            PhoneNumber = "98564712",
                            Registration = "21060656",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(8578),
                            Status = true,
                            Surname = "Paulo"
                        },
                        new
                        {
                            Id = new Guid("3f9a8d15-04e9-4d67-8a77-fdbb62beb014"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ananias",
                            PhoneNumber = "33589624",
                            Registration = "21060575",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(8593),
                            Status = true,
                            Surname = "Fernandes"
                        },
                        new
                        {
                            Id = new Guid("42c37773-ebe6-4383-847e-98e9f5da9b2c"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "José",
                            PhoneNumber = "98745122",
                            Registration = "21060100",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(8606),
                            Status = true,
                            Surname = "Arimatéia"
                        },
                        new
                        {
                            Id = new Guid("06f55e3f-63d8-4732-8f04-bfbf3d05360c"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Carlos",
                            PhoneNumber = "44558896",
                            Registration = "21060229",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(8638),
                            Status = true,
                            Surname = "Gaiado"
                        },
                        new
                        {
                            Id = new Guid("f60a98be-7e8b-4b64-a90a-020d20e180bf"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Diogenes",
                            PhoneNumber = "22665588",
                            Registration = "21062671",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(8650),
                            Status = true,
                            Surname = "Finético"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseSubjectId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int")
                        .HasMaxLength(9999);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "CourseSubjectId");

                    b.HasIndex("CourseSubjectId");

                    b.ToTable("StudentsCoursesSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("9934948a-1985-4ec5-97c3-18a7dc481d41"),
                            CourseSubjectId = new Guid("ed3b1dee-f400-43a7-931a-cf083cd67dce"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(1947)
                        },
                        new
                        {
                            StudentId = new Guid("9934948a-1985-4ec5-97c3-18a7dc481d41"),
                            CourseSubjectId = new Guid("518ce648-0333-42ad-89cf-0535cdddf639"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(4949)
                        },
                        new
                        {
                            StudentId = new Guid("9934948a-1985-4ec5-97c3-18a7dc481d41"),
                            CourseSubjectId = new Guid("3b6ce767-fa01-4566-80b4-da1d204d42fc"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5016)
                        },
                        new
                        {
                            StudentId = new Guid("58527147-3315-4c6d-93b4-82543d3d06b7"),
                            CourseSubjectId = new Guid("ed3b1dee-f400-43a7-931a-cf083cd67dce"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5023)
                        },
                        new
                        {
                            StudentId = new Guid("58527147-3315-4c6d-93b4-82543d3d06b7"),
                            CourseSubjectId = new Guid("518ce648-0333-42ad-89cf-0535cdddf639"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5027)
                        },
                        new
                        {
                            StudentId = new Guid("58527147-3315-4c6d-93b4-82543d3d06b7"),
                            CourseSubjectId = new Guid("3b6ce767-fa01-4566-80b4-da1d204d42fc"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5040)
                        },
                        new
                        {
                            StudentId = new Guid("4a8730d5-b447-4c0a-b2fa-2950dcb4b819"),
                            CourseSubjectId = new Guid("ed3b1dee-f400-43a7-931a-cf083cd67dce"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5044)
                        },
                        new
                        {
                            StudentId = new Guid("4a8730d5-b447-4c0a-b2fa-2950dcb4b819"),
                            CourseSubjectId = new Guid("518ce648-0333-42ad-89cf-0535cdddf639"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5050)
                        },
                        new
                        {
                            StudentId = new Guid("4a8730d5-b447-4c0a-b2fa-2950dcb4b819"),
                            CourseSubjectId = new Guid("3b6ce767-fa01-4566-80b4-da1d204d42fc"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5054)
                        },
                        new
                        {
                            StudentId = new Guid("9dab1d50-9c21-4c04-a097-b0eaaf7cb218"),
                            CourseSubjectId = new Guid("63b6c6f3-c29b-4e9a-b315-2d0fb2496c18"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5060)
                        },
                        new
                        {
                            StudentId = new Guid("9dab1d50-9c21-4c04-a097-b0eaaf7cb218"),
                            CourseSubjectId = new Guid("bba58a25-a7b5-44d1-a276-0fd651502a79"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5065)
                        },
                        new
                        {
                            StudentId = new Guid("25d44203-6897-4c6c-8ec0-fe689be09bd9"),
                            CourseSubjectId = new Guid("63b6c6f3-c29b-4e9a-b315-2d0fb2496c18"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5068)
                        },
                        new
                        {
                            StudentId = new Guid("25d44203-6897-4c6c-8ec0-fe689be09bd9"),
                            CourseSubjectId = new Guid("bba58a25-a7b5-44d1-a276-0fd651502a79"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5071)
                        },
                        new
                        {
                            StudentId = new Guid("3f9a8d15-04e9-4d67-8a77-fdbb62beb014"),
                            CourseSubjectId = new Guid("63b6c6f3-c29b-4e9a-b315-2d0fb2496c18"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5074)
                        },
                        new
                        {
                            StudentId = new Guid("3f9a8d15-04e9-4d67-8a77-fdbb62beb014"),
                            CourseSubjectId = new Guid("bba58a25-a7b5-44d1-a276-0fd651502a79"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5077)
                        },
                        new
                        {
                            StudentId = new Guid("42c37773-ebe6-4383-847e-98e9f5da9b2c"),
                            CourseSubjectId = new Guid("4b6df1ce-ddf1-4f35-a421-ce7c0a4a7fc9"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5080)
                        },
                        new
                        {
                            StudentId = new Guid("42c37773-ebe6-4383-847e-98e9f5da9b2c"),
                            CourseSubjectId = new Guid("f87ce61f-d955-40b8-9522-d1095888b040"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5083)
                        },
                        new
                        {
                            StudentId = new Guid("42c37773-ebe6-4383-847e-98e9f5da9b2c"),
                            CourseSubjectId = new Guid("a5a4d521-f5c7-4935-9ee9-e050cb0fe2ab"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5089)
                        },
                        new
                        {
                            StudentId = new Guid("06f55e3f-63d8-4732-8f04-bfbf3d05360c"),
                            CourseSubjectId = new Guid("4b6df1ce-ddf1-4f35-a421-ce7c0a4a7fc9"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5092)
                        },
                        new
                        {
                            StudentId = new Guid("06f55e3f-63d8-4732-8f04-bfbf3d05360c"),
                            CourseSubjectId = new Guid("f87ce61f-d955-40b8-9522-d1095888b040"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5095)
                        },
                        new
                        {
                            StudentId = new Guid("06f55e3f-63d8-4732-8f04-bfbf3d05360c"),
                            CourseSubjectId = new Guid("a5a4d521-f5c7-4935-9ee9-e050cb0fe2ab"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5097)
                        },
                        new
                        {
                            StudentId = new Guid("f60a98be-7e8b-4b64-a90a-020d20e180bf"),
                            CourseSubjectId = new Guid("4b6df1ce-ddf1-4f35-a421-ce7c0a4a7fc9"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5101)
                        },
                        new
                        {
                            StudentId = new Guid("f60a98be-7e8b-4b64-a90a-020d20e180bf"),
                            CourseSubjectId = new Guid("f87ce61f-d955-40b8-9522-d1095888b040"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5105)
                        },
                        new
                        {
                            StudentId = new Guid("f60a98be-7e8b-4b64-a90a-020d20e180bf"),
                            CourseSubjectId = new Guid("a5a4d521-f5c7-4935-9ee9-e050cb0fe2ab"),
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 525, DateTimeKind.Local).AddTicks(5108)
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Workload")
                        .HasColumnType("int")
                        .HasMaxLength(9999);

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d7fd6ca-fbdf-4919-89f3-065a824b20ed"),
                            Name = "Matemática",
                            TeacherId = new Guid("17e1c39f-96a3-4941-837f-1d8158e9d5ac")
                        },
                        new
                        {
                            Id = new Guid("daa0d0b6-597f-4c46-aa3b-7ece5a65e61d"),
                            Name = "Limpeza de Gabinete",
                            TeacherId = new Guid("d7ee79b2-517c-43c4-bb43-036fdeaf4a6d")
                        },
                        new
                        {
                            Id = new Guid("8b035092-aba4-41cd-bb1b-0a775790f017"),
                            Name = "Português",
                            TeacherId = new Guid("5e1e44b8-b3ff-4862-83f0-9bc1600dcb58")
                        },
                        new
                        {
                            Id = new Guid("4c8175d1-da55-4f75-aebf-baf3dba8bdde"),
                            Name = "Arquitetura de Servidores",
                            TeacherId = new Guid("b27914c8-3b4c-4876-8fdb-5280abd6edd1")
                        },
                        new
                        {
                            Id = new Guid("a14008d6-f7b7-46a2-9920-619039ef22c6"),
                            Name = "Programação",
                            TeacherId = new Guid("91d03af7-325b-4542-98fc-bcbd1e99dac5")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17e1c39f-96a3-4941-837f-1d8158e9d5ac"),
                            Name = "José",
                            PhoneNumber = "44778899",
                            Registration = "21061936",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(9226),
                            Status = true,
                            Surname = "Roberto"
                        },
                        new
                        {
                            Id = new Guid("d7ee79b2-517c-43c4-bb43-036fdeaf4a6d"),
                            Name = "Carlos",
                            PhoneNumber = "33568941",
                            Registration = "21060177",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(9283),
                            Status = true,
                            Surname = "Eduardo"
                        },
                        new
                        {
                            Id = new Guid("5e1e44b8-b3ff-4862-83f0-9bc1600dcb58"),
                            Name = "Manuel",
                            PhoneNumber = "99587462",
                            Registration = "21060189",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(9301),
                            Status = true,
                            Surname = "Nobre"
                        },
                        new
                        {
                            Id = new Guid("b27914c8-3b4c-4876-8fdb-5280abd6edd1"),
                            Name = "João",
                            PhoneNumber = "33506987",
                            Registration = "21060141",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(9320),
                            Status = true,
                            Surname = "Olavo"
                        },
                        new
                        {
                            Id = new Guid("91d03af7-325b-4542-98fc-bcbd1e99dac5"),
                            Name = "Lucas",
                            PhoneNumber = "33214896",
                            Registration = "21060139",
                            StartDate = new DateTime(2021, 4, 6, 19, 10, 46, 514, DateTimeKind.Local).AddTicks(9342),
                            Status = true,
                            Surname = "Ribas"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Course", "Course")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Subject", "Subject")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.CourseSubject", "CourseSubject")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("CourseSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Student", "Student")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Teacher", "Teacher")
                        .WithMany("Subject")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
