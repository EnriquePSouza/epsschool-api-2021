// <auto-generated />
using System;
using EpsSchool.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EpsSchool.Infra.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EpsSchool.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("354b80ec-9175-4c4f-9f29-d1895e7d128c"),
                            Name = "Informatica"
                        },
                        new
                        {
                            Id = new Guid("4e1fe682-fddb-4f33-a2fb-3363cf383375"),
                            Name = "Manutenção de Micros"
                        },
                        new
                        {
                            Id = new Guid("2489da8a-53c0-4d2b-a976-a8e7af71843b"),
                            Name = "Redes de Computadores"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CoursesSubjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9e10de45-65f6-4877-9dc3-c741481c760c"),
                            CourseId = new Guid("354b80ec-9175-4c4f-9f29-d1895e7d128c"),
                            SubjectId = new Guid("4851ea47-2f4e-4e44-a622-9728f7c35266")
                        },
                        new
                        {
                            Id = new Guid("5f84c724-28b2-42c3-a6a0-1c91eb2be9ab"),
                            CourseId = new Guid("354b80ec-9175-4c4f-9f29-d1895e7d128c"),
                            SubjectId = new Guid("67775473-94d3-4f4c-bd42-1fc247b3bfcb")
                        },
                        new
                        {
                            Id = new Guid("72c41611-5512-444b-928d-37439b0e602e"),
                            CourseId = new Guid("354b80ec-9175-4c4f-9f29-d1895e7d128c"),
                            SubjectId = new Guid("ca80d73c-0aa6-47d8-ae22-c08fdf8fb2d3")
                        },
                        new
                        {
                            Id = new Guid("4f527438-a283-411d-8802-340f8bfc70da"),
                            CourseId = new Guid("4e1fe682-fddb-4f33-a2fb-3363cf383375"),
                            SubjectId = new Guid("44b4cc1a-f2df-4573-a6b3-55acd49c226e")
                        },
                        new
                        {
                            Id = new Guid("fce6fc71-5f8b-47bd-ab25-aad932b8533a"),
                            CourseId = new Guid("4e1fe682-fddb-4f33-a2fb-3363cf383375"),
                            SubjectId = new Guid("67775473-94d3-4f4c-bd42-1fc247b3bfcb")
                        },
                        new
                        {
                            Id = new Guid("c6f9f026-72a5-4ffd-ba99-e7f1e3f93172"),
                            CourseId = new Guid("2489da8a-53c0-4d2b-a976-a8e7af71843b"),
                            SubjectId = new Guid("4851ea47-2f4e-4e44-a622-9728f7c35266")
                        },
                        new
                        {
                            Id = new Guid("cc99a8c5-9316-45b7-8e74-233f3e56863d"),
                            CourseId = new Guid("2489da8a-53c0-4d2b-a976-a8e7af71843b"),
                            SubjectId = new Guid("67775473-94d3-4f4c-bd42-1fc247b3bfcb")
                        },
                        new
                        {
                            Id = new Guid("a4868bac-11b5-4141-94d1-e5937dd31c20"),
                            CourseId = new Guid("2489da8a-53c0-4d2b-a976-a8e7af71843b"),
                            SubjectId = new Guid("543316ef-5f5e-47eb-b36a-11b94df8b2a7")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a156e221-e5e7-4b23-8e66-ccf837c8810f"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210349025",
                            FirstName = "Joana",
                            LastName = "Alves",
                            PhoneNumber = "33556699",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 67, DateTimeKind.Local).AddTicks(9040),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("38913f47-2140-4718-9cd6-24c44dfc8eb6"),
                            BirthDate = new DateTime(2006, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210322041",
                            FirstName = "Joana",
                            LastName = "Alves",
                            PhoneNumber = "33447789",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 67, DateTimeKind.Local).AddTicks(9708),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("7a2b512e-2df8-4a12-ab1b-022b5b60c3ad"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210351122",
                            FirstName = "Vanessa",
                            LastName = "Lisboa",
                            PhoneNumber = "99562341",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 67, DateTimeKind.Local).AddTicks(9756),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("49f6a159-7546-44c2-8987-3d563c16c899"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210351102",
                            FirstName = "Maria",
                            LastName = "Madalena",
                            PhoneNumber = "99452417",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 67, DateTimeKind.Local).AddTicks(9780),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("d97854ad-1b35-47fe-902a-69cbcff31e1c"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210312405",
                            FirstName = "João",
                            LastName = "Paulo",
                            PhoneNumber = "98564712",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 67, DateTimeKind.Local).AddTicks(9803),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("ea23de23-b0f2-4e77-ac8d-b4b320d271d5"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210351103",
                            FirstName = "Ananias",
                            LastName = "Fernandes",
                            PhoneNumber = "33589624",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 67, DateTimeKind.Local).AddTicks(9825),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("59afd626-77e1-4b16-852a-6ec4fda31c4b"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210351164",
                            FirstName = "José",
                            LastName = "Arimatéia",
                            PhoneNumber = "98745122",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 67, DateTimeKind.Local).AddTicks(9846),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("dec14fa8-a039-4195-a2fb-b18f8d31d071"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210316308",
                            FirstName = "Carlos",
                            LastName = "Gaiado",
                            PhoneNumber = "44558896",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 68, DateTimeKind.Local).AddTicks(1069),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("5c0cdfa5-a60a-48d3-b943-50a990745ae0"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210315742",
                            FirstName = "Diogenes",
                            LastName = "Finético",
                            PhoneNumber = "22665588",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 68, DateTimeKind.Local).AddTicks(1107),
                            Status = true
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseSubjectId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int")
                        .HasMaxLength(9999);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "CourseSubjectId");

                    b.HasIndex("CourseSubjectId");

                    b.ToTable("StudentsCoursesSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("a156e221-e5e7-4b23-8e66-ccf837c8810f"),
                            CourseSubjectId = new Guid("9e10de45-65f6-4877-9dc3-c741481c760c"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 73, DateTimeKind.Local).AddTicks(4550)
                        },
                        new
                        {
                            StudentId = new Guid("a156e221-e5e7-4b23-8e66-ccf837c8810f"),
                            CourseSubjectId = new Guid("5f84c724-28b2-42c3-a6a0-1c91eb2be9ab"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6266)
                        },
                        new
                        {
                            StudentId = new Guid("a156e221-e5e7-4b23-8e66-ccf837c8810f"),
                            CourseSubjectId = new Guid("72c41611-5512-444b-928d-37439b0e602e"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6311)
                        },
                        new
                        {
                            StudentId = new Guid("38913f47-2140-4718-9cd6-24c44dfc8eb6"),
                            CourseSubjectId = new Guid("9e10de45-65f6-4877-9dc3-c741481c760c"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6316)
                        },
                        new
                        {
                            StudentId = new Guid("38913f47-2140-4718-9cd6-24c44dfc8eb6"),
                            CourseSubjectId = new Guid("5f84c724-28b2-42c3-a6a0-1c91eb2be9ab"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6320)
                        },
                        new
                        {
                            StudentId = new Guid("38913f47-2140-4718-9cd6-24c44dfc8eb6"),
                            CourseSubjectId = new Guid("72c41611-5512-444b-928d-37439b0e602e"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6323)
                        },
                        new
                        {
                            StudentId = new Guid("7a2b512e-2df8-4a12-ab1b-022b5b60c3ad"),
                            CourseSubjectId = new Guid("9e10de45-65f6-4877-9dc3-c741481c760c"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6326)
                        },
                        new
                        {
                            StudentId = new Guid("7a2b512e-2df8-4a12-ab1b-022b5b60c3ad"),
                            CourseSubjectId = new Guid("5f84c724-28b2-42c3-a6a0-1c91eb2be9ab"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6328)
                        },
                        new
                        {
                            StudentId = new Guid("7a2b512e-2df8-4a12-ab1b-022b5b60c3ad"),
                            CourseSubjectId = new Guid("72c41611-5512-444b-928d-37439b0e602e"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6332)
                        },
                        new
                        {
                            StudentId = new Guid("49f6a159-7546-44c2-8987-3d563c16c899"),
                            CourseSubjectId = new Guid("4f527438-a283-411d-8802-340f8bfc70da"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6335)
                        },
                        new
                        {
                            StudentId = new Guid("49f6a159-7546-44c2-8987-3d563c16c899"),
                            CourseSubjectId = new Guid("fce6fc71-5f8b-47bd-ab25-aad932b8533a"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6338)
                        },
                        new
                        {
                            StudentId = new Guid("d97854ad-1b35-47fe-902a-69cbcff31e1c"),
                            CourseSubjectId = new Guid("4f527438-a283-411d-8802-340f8bfc70da"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6341)
                        },
                        new
                        {
                            StudentId = new Guid("d97854ad-1b35-47fe-902a-69cbcff31e1c"),
                            CourseSubjectId = new Guid("fce6fc71-5f8b-47bd-ab25-aad932b8533a"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6344)
                        },
                        new
                        {
                            StudentId = new Guid("ea23de23-b0f2-4e77-ac8d-b4b320d271d5"),
                            CourseSubjectId = new Guid("4f527438-a283-411d-8802-340f8bfc70da"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6347)
                        },
                        new
                        {
                            StudentId = new Guid("ea23de23-b0f2-4e77-ac8d-b4b320d271d5"),
                            CourseSubjectId = new Guid("fce6fc71-5f8b-47bd-ab25-aad932b8533a"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6350)
                        },
                        new
                        {
                            StudentId = new Guid("59afd626-77e1-4b16-852a-6ec4fda31c4b"),
                            CourseSubjectId = new Guid("c6f9f026-72a5-4ffd-ba99-e7f1e3f93172"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6353)
                        },
                        new
                        {
                            StudentId = new Guid("59afd626-77e1-4b16-852a-6ec4fda31c4b"),
                            CourseSubjectId = new Guid("cc99a8c5-9316-45b7-8e74-233f3e56863d"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6356)
                        },
                        new
                        {
                            StudentId = new Guid("59afd626-77e1-4b16-852a-6ec4fda31c4b"),
                            CourseSubjectId = new Guid("a4868bac-11b5-4141-94d1-e5937dd31c20"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6359)
                        },
                        new
                        {
                            StudentId = new Guid("dec14fa8-a039-4195-a2fb-b18f8d31d071"),
                            CourseSubjectId = new Guid("c6f9f026-72a5-4ffd-ba99-e7f1e3f93172"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6362)
                        },
                        new
                        {
                            StudentId = new Guid("dec14fa8-a039-4195-a2fb-b18f8d31d071"),
                            CourseSubjectId = new Guid("cc99a8c5-9316-45b7-8e74-233f3e56863d"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6365)
                        },
                        new
                        {
                            StudentId = new Guid("dec14fa8-a039-4195-a2fb-b18f8d31d071"),
                            CourseSubjectId = new Guid("a4868bac-11b5-4141-94d1-e5937dd31c20"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6368)
                        },
                        new
                        {
                            StudentId = new Guid("5c0cdfa5-a60a-48d3-b943-50a990745ae0"),
                            CourseSubjectId = new Guid("c6f9f026-72a5-4ffd-ba99-e7f1e3f93172"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6371)
                        },
                        new
                        {
                            StudentId = new Guid("5c0cdfa5-a60a-48d3-b943-50a990745ae0"),
                            CourseSubjectId = new Guid("cc99a8c5-9316-45b7-8e74-233f3e56863d"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6374)
                        },
                        new
                        {
                            StudentId = new Guid("5c0cdfa5-a60a-48d3-b943-50a990745ae0"),
                            CourseSubjectId = new Guid("a4868bac-11b5-4141-94d1-e5937dd31c20"),
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 74, DateTimeKind.Local).AddTicks(6377)
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4851ea47-2f4e-4e44-a622-9728f7c35266"),
                            Name = "Matemática"
                        },
                        new
                        {
                            Id = new Guid("44b4cc1a-f2df-4573-a6b3-55acd49c226e"),
                            Name = "Limpeza de Gabinete"
                        },
                        new
                        {
                            Id = new Guid("67775473-94d3-4f4c-bd42-1fc247b3bfcb"),
                            Name = "Português"
                        },
                        new
                        {
                            Id = new Guid("543316ef-5f5e-47eb-b36a-11b94df8b2a7"),
                            Name = "Arquitetura de Servidores"
                        },
                        new
                        {
                            Id = new Guid("ca80d73c-0aa6-47d8-ae22-c08fdf8fb2d3"),
                            Name = "Programação"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a75e8e35-051c-4903-9301-7d23e11b1961"),
                            Enrollment = "210351140",
                            FirstName = "José",
                            LastName = "Roberto",
                            PhoneNumber = "44778899",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 40, DateTimeKind.Local).AddTicks(6198),
                            Status = true,
                            SubjectId = new Guid("4851ea47-2f4e-4e44-a622-9728f7c35266")
                        },
                        new
                        {
                            Id = new Guid("a987e3d7-6a74-483e-83f5-5ce2ac4e8cd9"),
                            Enrollment = "210351630",
                            FirstName = "Carlos",
                            LastName = "Eduardo",
                            PhoneNumber = "33568941",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 40, DateTimeKind.Local).AddTicks(7877),
                            Status = true,
                            SubjectId = new Guid("44b4cc1a-f2df-4573-a6b3-55acd49c226e")
                        },
                        new
                        {
                            Id = new Guid("57916942-c682-454f-9d5c-2047fd70f7fd"),
                            Enrollment = "210351147",
                            FirstName = "Manuel",
                            LastName = "Nobre",
                            PhoneNumber = "99587462",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 40, DateTimeKind.Local).AddTicks(7956),
                            Status = true,
                            SubjectId = new Guid("67775473-94d3-4f4c-bd42-1fc247b3bfcb")
                        },
                        new
                        {
                            Id = new Guid("eeb48fda-a2d9-4151-8bcf-e47ba7e95c6e"),
                            Enrollment = "210351116",
                            FirstName = "João",
                            LastName = "Olavo",
                            PhoneNumber = "33506987",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 40, DateTimeKind.Local).AddTicks(7980),
                            Status = true,
                            SubjectId = new Guid("543316ef-5f5e-47eb-b36a-11b94df8b2a7")
                        },
                        new
                        {
                            Id = new Guid("ecbb0635-a30a-4b46-8acf-e3a820071145"),
                            Enrollment = "210312425",
                            FirstName = "Lucas",
                            LastName = "Ribas",
                            PhoneNumber = "33214896",
                            StartDate = new DateTime(2021, 5, 3, 21, 15, 5, 40, DateTimeKind.Local).AddTicks(8001),
                            Status = true,
                            SubjectId = new Guid("ca80d73c-0aa6-47d8-ae22-c08fdf8fb2d3")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("Role")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Course", "Course")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Subject", "Subject")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.CourseSubject", "CourseSubject")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("CourseSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Student", "Student")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Teacher", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Subject", "Subject")
                        .WithMany("Teachers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
