// <auto-generated />
using System;
using EpsSchool.infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EpsSchool.Infra.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EpsSchool.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0e6ab627-003f-49ed-9a96-5433b0899de0"),
                            Name = "Informatica"
                        },
                        new
                        {
                            Id = new Guid("cd9cb39e-4e77-47a5-abf5-82a3f76d56fe"),
                            Name = "Manutenção de Micros"
                        },
                        new
                        {
                            Id = new Guid("598e17a7-3c98-4ba9-9878-0c2b2e78bb91"),
                            Name = "Redes de Computadores"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CoursesSubjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7eb9af3a-457f-4974-8a40-3b83a42bc527"),
                            CourseId = new Guid("0e6ab627-003f-49ed-9a96-5433b0899de0"),
                            SubjectId = new Guid("843d9700-a152-489f-b76c-921fe20e735b")
                        },
                        new
                        {
                            Id = new Guid("b7c6472b-0562-4927-8eba-47e2c7495b5a"),
                            CourseId = new Guid("0e6ab627-003f-49ed-9a96-5433b0899de0"),
                            SubjectId = new Guid("9751581d-8951-41ea-8f6f-3ae459c72d6d")
                        },
                        new
                        {
                            Id = new Guid("39e08dfd-f6d7-4bf6-8a82-f6593761b2b2"),
                            CourseId = new Guid("0e6ab627-003f-49ed-9a96-5433b0899de0"),
                            SubjectId = new Guid("c6f329fa-50c4-4471-bc28-ccd3780bd76c")
                        },
                        new
                        {
                            Id = new Guid("518adb37-b8a3-48ed-b0ac-5fa1d77051c6"),
                            CourseId = new Guid("cd9cb39e-4e77-47a5-abf5-82a3f76d56fe"),
                            SubjectId = new Guid("9ca5e0dd-1925-4aba-94b2-2c652ab0e36e")
                        },
                        new
                        {
                            Id = new Guid("665f71d1-f2b6-474d-b79c-d1410114f684"),
                            CourseId = new Guid("cd9cb39e-4e77-47a5-abf5-82a3f76d56fe"),
                            SubjectId = new Guid("9751581d-8951-41ea-8f6f-3ae459c72d6d")
                        },
                        new
                        {
                            Id = new Guid("8bce8093-63ea-4404-a678-4d4c3108cb9f"),
                            CourseId = new Guid("598e17a7-3c98-4ba9-9878-0c2b2e78bb91"),
                            SubjectId = new Guid("843d9700-a152-489f-b76c-921fe20e735b")
                        },
                        new
                        {
                            Id = new Guid("edca5bb8-a68c-4870-aaf1-3e29378f92fa"),
                            CourseId = new Guid("598e17a7-3c98-4ba9-9878-0c2b2e78bb91"),
                            SubjectId = new Guid("9751581d-8951-41ea-8f6f-3ae459c72d6d")
                        },
                        new
                        {
                            Id = new Guid("f84640c5-6b8d-4971-9c5d-f2cc0159690f"),
                            CourseId = new Guid("598e17a7-3c98-4ba9-9878-0c2b2e78bb91"),
                            SubjectId = new Guid("50e5eb5a-9cfb-477b-b99a-a1d886b9b987")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79694048-3183-4c2f-9247-17ec7786d3ac"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21081971",
                            Name = "Joana",
                            PhoneNumber = "33556699",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(6285),
                            Status = true,
                            Surname = "Alves"
                        },
                        new
                        {
                            Id = new Guid("435172d4-e829-4775-8b8b-7ca347ec7a17"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21080133",
                            Name = "Fernanda",
                            PhoneNumber = "33447789",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(8276),
                            Status = true,
                            Surname = "Silva"
                        },
                        new
                        {
                            Id = new Guid("d3cb36ee-f1c2-48ec-a649-0b2e65eed2ad"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21084193",
                            Name = "Vanessa",
                            PhoneNumber = "99562341",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(8377),
                            Status = true,
                            Surname = "Lisboa"
                        },
                        new
                        {
                            Id = new Guid("6a8f5d01-4e5e-4920-a899-82b493146ac5"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21081380",
                            Name = "Maria",
                            PhoneNumber = "99452417",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(8391),
                            Status = true,
                            Surname = "Madalena"
                        },
                        new
                        {
                            Id = new Guid("2af684f2-9e20-499d-a548-7c4aff1ea340"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21081773",
                            Name = "João",
                            PhoneNumber = "98564712",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(8402),
                            Status = true,
                            Surname = "Paulo"
                        },
                        new
                        {
                            Id = new Guid("7869c977-ac91-4cd2-9425-804a70adfdf7"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21080198",
                            Name = "Ananias",
                            PhoneNumber = "33589624",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(8421),
                            Status = true,
                            Surname = "Fernandes"
                        },
                        new
                        {
                            Id = new Guid("4f5e8c46-462a-4510-80db-5835f2d5fee1"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21080555",
                            Name = "José",
                            PhoneNumber = "98745122",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(8436),
                            Status = true,
                            Surname = "Arimatéia"
                        },
                        new
                        {
                            Id = new Guid("9b89bf54-4642-40eb-b5d5-5220b4826fd5"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21087780",
                            Name = "Carlos",
                            PhoneNumber = "44558896",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(8449),
                            Status = true,
                            Surname = "Gaiado"
                        },
                        new
                        {
                            Id = new Guid("331f2e60-858d-4b74-9872-86dd9d526562"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21080947",
                            Name = "Diogenes",
                            PhoneNumber = "22665588",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(8471),
                            Status = true,
                            Surname = "Finético"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseSubjectId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int")
                        .HasMaxLength(9999);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "CourseSubjectId");

                    b.HasIndex("CourseSubjectId");

                    b.ToTable("StudentsCoursesSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("79694048-3183-4c2f-9247-17ec7786d3ac"),
                            CourseSubjectId = new Guid("7eb9af3a-457f-4974-8a40-3b83a42bc527"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(8363)
                        },
                        new
                        {
                            StudentId = new Guid("79694048-3183-4c2f-9247-17ec7786d3ac"),
                            CourseSubjectId = new Guid("b7c6472b-0562-4927-8eba-47e2c7495b5a"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9546)
                        },
                        new
                        {
                            StudentId = new Guid("79694048-3183-4c2f-9247-17ec7786d3ac"),
                            CourseSubjectId = new Guid("39e08dfd-f6d7-4bf6-8a82-f6593761b2b2"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9587)
                        },
                        new
                        {
                            StudentId = new Guid("435172d4-e829-4775-8b8b-7ca347ec7a17"),
                            CourseSubjectId = new Guid("7eb9af3a-457f-4974-8a40-3b83a42bc527"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9591)
                        },
                        new
                        {
                            StudentId = new Guid("435172d4-e829-4775-8b8b-7ca347ec7a17"),
                            CourseSubjectId = new Guid("b7c6472b-0562-4927-8eba-47e2c7495b5a"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9594)
                        },
                        new
                        {
                            StudentId = new Guid("435172d4-e829-4775-8b8b-7ca347ec7a17"),
                            CourseSubjectId = new Guid("39e08dfd-f6d7-4bf6-8a82-f6593761b2b2"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9600)
                        },
                        new
                        {
                            StudentId = new Guid("d3cb36ee-f1c2-48ec-a649-0b2e65eed2ad"),
                            CourseSubjectId = new Guid("7eb9af3a-457f-4974-8a40-3b83a42bc527"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9603)
                        },
                        new
                        {
                            StudentId = new Guid("d3cb36ee-f1c2-48ec-a649-0b2e65eed2ad"),
                            CourseSubjectId = new Guid("b7c6472b-0562-4927-8eba-47e2c7495b5a"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9606)
                        },
                        new
                        {
                            StudentId = new Guid("d3cb36ee-f1c2-48ec-a649-0b2e65eed2ad"),
                            CourseSubjectId = new Guid("39e08dfd-f6d7-4bf6-8a82-f6593761b2b2"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9608)
                        },
                        new
                        {
                            StudentId = new Guid("6a8f5d01-4e5e-4920-a899-82b493146ac5"),
                            CourseSubjectId = new Guid("518adb37-b8a3-48ed-b0ac-5fa1d77051c6"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9613)
                        },
                        new
                        {
                            StudentId = new Guid("6a8f5d01-4e5e-4920-a899-82b493146ac5"),
                            CourseSubjectId = new Guid("665f71d1-f2b6-474d-b79c-d1410114f684"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9616)
                        },
                        new
                        {
                            StudentId = new Guid("2af684f2-9e20-499d-a548-7c4aff1ea340"),
                            CourseSubjectId = new Guid("518adb37-b8a3-48ed-b0ac-5fa1d77051c6"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9618)
                        },
                        new
                        {
                            StudentId = new Guid("2af684f2-9e20-499d-a548-7c4aff1ea340"),
                            CourseSubjectId = new Guid("665f71d1-f2b6-474d-b79c-d1410114f684"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9621)
                        },
                        new
                        {
                            StudentId = new Guid("7869c977-ac91-4cd2-9425-804a70adfdf7"),
                            CourseSubjectId = new Guid("518adb37-b8a3-48ed-b0ac-5fa1d77051c6"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9623)
                        },
                        new
                        {
                            StudentId = new Guid("7869c977-ac91-4cd2-9425-804a70adfdf7"),
                            CourseSubjectId = new Guid("665f71d1-f2b6-474d-b79c-d1410114f684"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9626)
                        },
                        new
                        {
                            StudentId = new Guid("4f5e8c46-462a-4510-80db-5835f2d5fee1"),
                            CourseSubjectId = new Guid("8bce8093-63ea-4404-a678-4d4c3108cb9f"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9628)
                        },
                        new
                        {
                            StudentId = new Guid("4f5e8c46-462a-4510-80db-5835f2d5fee1"),
                            CourseSubjectId = new Guid("edca5bb8-a68c-4870-aaf1-3e29378f92fa"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9631)
                        },
                        new
                        {
                            StudentId = new Guid("4f5e8c46-462a-4510-80db-5835f2d5fee1"),
                            CourseSubjectId = new Guid("f84640c5-6b8d-4971-9c5d-f2cc0159690f"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9636)
                        },
                        new
                        {
                            StudentId = new Guid("9b89bf54-4642-40eb-b5d5-5220b4826fd5"),
                            CourseSubjectId = new Guid("8bce8093-63ea-4404-a678-4d4c3108cb9f"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9703)
                        },
                        new
                        {
                            StudentId = new Guid("9b89bf54-4642-40eb-b5d5-5220b4826fd5"),
                            CourseSubjectId = new Guid("edca5bb8-a68c-4870-aaf1-3e29378f92fa"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9708)
                        },
                        new
                        {
                            StudentId = new Guid("9b89bf54-4642-40eb-b5d5-5220b4826fd5"),
                            CourseSubjectId = new Guid("f84640c5-6b8d-4971-9c5d-f2cc0159690f"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9711)
                        },
                        new
                        {
                            StudentId = new Guid("331f2e60-858d-4b74-9872-86dd9d526562"),
                            CourseSubjectId = new Guid("8bce8093-63ea-4404-a678-4d4c3108cb9f"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9713)
                        },
                        new
                        {
                            StudentId = new Guid("331f2e60-858d-4b74-9872-86dd9d526562"),
                            CourseSubjectId = new Guid("edca5bb8-a68c-4870-aaf1-3e29378f92fa"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9716)
                        },
                        new
                        {
                            StudentId = new Guid("331f2e60-858d-4b74-9872-86dd9d526562"),
                            CourseSubjectId = new Guid("f84640c5-6b8d-4971-9c5d-f2cc0159690f"),
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 948, DateTimeKind.Local).AddTicks(9719)
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("843d9700-a152-489f-b76c-921fe20e735b"),
                            Name = "Matemática",
                            TeacherId = new Guid("541e2320-a8ef-401d-a136-63b68946fccc")
                        },
                        new
                        {
                            Id = new Guid("9ca5e0dd-1925-4aba-94b2-2c652ab0e36e"),
                            Name = "Limpeza de Gabinete",
                            TeacherId = new Guid("af621e46-bf5f-4ed7-91b4-ca524787ed07")
                        },
                        new
                        {
                            Id = new Guid("9751581d-8951-41ea-8f6f-3ae459c72d6d"),
                            Name = "Português",
                            TeacherId = new Guid("90946f61-21dc-4b5f-9b3f-a0ffd002eb62")
                        },
                        new
                        {
                            Id = new Guid("50e5eb5a-9cfb-477b-b99a-a1d886b9b987"),
                            Name = "Arquitetura de Servidores",
                            TeacherId = new Guid("e79b39f1-2bde-4389-9d89-74bfb2aee6c5")
                        },
                        new
                        {
                            Id = new Guid("c6f329fa-50c4-4471-bc28-ccd3780bd76c"),
                            Name = "Programação",
                            TeacherId = new Guid("8e40e177-454d-49c6-a771-a211715b9172")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("541e2320-a8ef-401d-a136-63b68946fccc"),
                            Enrollment = "21081855",
                            Name = "José",
                            PhoneNumber = "44778899",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(8966),
                            Status = true,
                            Surname = "Roberto"
                        },
                        new
                        {
                            Id = new Guid("af621e46-bf5f-4ed7-91b4-ca524787ed07"),
                            Enrollment = "21080126",
                            Name = "Carlos",
                            PhoneNumber = "33568941",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(9002),
                            Status = true,
                            Surname = "Eduardo"
                        },
                        new
                        {
                            Id = new Guid("90946f61-21dc-4b5f-9b3f-a0ffd002eb62"),
                            Enrollment = "21081182",
                            Name = "Manuel",
                            PhoneNumber = "99587462",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(9015),
                            Status = true,
                            Surname = "Nobre"
                        },
                        new
                        {
                            Id = new Guid("e79b39f1-2bde-4389-9d89-74bfb2aee6c5"),
                            Enrollment = "21080562",
                            Name = "João",
                            PhoneNumber = "33506987",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(9028),
                            Status = true,
                            Surname = "Olavo"
                        },
                        new
                        {
                            Id = new Guid("8e40e177-454d-49c6-a771-a211715b9172"),
                            Enrollment = "21080153",
                            Name = "Lucas",
                            PhoneNumber = "33214896",
                            StartDate = new DateTime(2021, 4, 8, 13, 23, 53, 938, DateTimeKind.Local).AddTicks(9042),
                            Status = true,
                            Surname = "Ribas"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Course", "Course")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Subject", "Subject")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.CourseSubject", "CourseSubject")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("CourseSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Student", "Student")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Teacher", "Teacher")
                        .WithMany("Subject")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
