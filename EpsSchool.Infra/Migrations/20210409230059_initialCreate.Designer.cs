// <auto-generated />
using System;
using EpsSchool.infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EpsSchool.Infra.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20210409230059_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EpsSchool.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6349625-76a1-4514-b97f-8feb0b189e7f"),
                            Name = "Informatica"
                        },
                        new
                        {
                            Id = new Guid("13393928-ee27-4c9e-8885-a1c5d3f15eba"),
                            Name = "Manutenção de Micros"
                        },
                        new
                        {
                            Id = new Guid("6004dac6-d601-486f-b0df-43c9ac9bfc9f"),
                            Name = "Redes de Computadores"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CoursesSubjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7888445f-42ca-48b6-a0fb-0263914c02b3"),
                            CourseId = new Guid("f6349625-76a1-4514-b97f-8feb0b189e7f"),
                            SubjectId = new Guid("66a6fc32-ee2c-4502-994a-660f98105d95")
                        },
                        new
                        {
                            Id = new Guid("ecc850c1-8eb0-4e2e-847f-fdce454284fc"),
                            CourseId = new Guid("f6349625-76a1-4514-b97f-8feb0b189e7f"),
                            SubjectId = new Guid("419b3939-ec99-4d07-9cde-3ca420f4e499")
                        },
                        new
                        {
                            Id = new Guid("62c00fe2-2158-4ebd-ade4-d3ada623b9d3"),
                            CourseId = new Guid("f6349625-76a1-4514-b97f-8feb0b189e7f"),
                            SubjectId = new Guid("b2a786c2-a9fb-4c81-83d7-3fd7f13f4463")
                        },
                        new
                        {
                            Id = new Guid("5695ff8f-eb83-41b6-abd2-bde45b34a1f3"),
                            CourseId = new Guid("13393928-ee27-4c9e-8885-a1c5d3f15eba"),
                            SubjectId = new Guid("b93d4f66-69cf-4300-b0e4-f8507c51cc7f")
                        },
                        new
                        {
                            Id = new Guid("ae5b9cbf-6a0b-4cf5-9c79-1776264e250c"),
                            CourseId = new Guid("13393928-ee27-4c9e-8885-a1c5d3f15eba"),
                            SubjectId = new Guid("419b3939-ec99-4d07-9cde-3ca420f4e499")
                        },
                        new
                        {
                            Id = new Guid("5f867828-a9a1-4e14-ade7-1e98c601eda1"),
                            CourseId = new Guid("6004dac6-d601-486f-b0df-43c9ac9bfc9f"),
                            SubjectId = new Guid("66a6fc32-ee2c-4502-994a-660f98105d95")
                        },
                        new
                        {
                            Id = new Guid("3bbe57c3-0e30-48c3-84bf-9360939530a2"),
                            CourseId = new Guid("6004dac6-d601-486f-b0df-43c9ac9bfc9f"),
                            SubjectId = new Guid("419b3939-ec99-4d07-9cde-3ca420f4e499")
                        },
                        new
                        {
                            Id = new Guid("a4abb96d-e7b0-412f-bc08-68f9c7ce260a"),
                            CourseId = new Guid("6004dac6-d601-486f-b0df-43c9ac9bfc9f"),
                            SubjectId = new Guid("9093635c-ad8a-4eaf-9066-460dc2896dda")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("92fe8719-8fc6-475b-8c86-8f2935648614"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210951391",
                            Name = "Joana",
                            PhoneNumber = "33556699",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 429, DateTimeKind.Local).AddTicks(7154),
                            Status = true,
                            Surname = "Alves"
                        },
                        new
                        {
                            Id = new Guid("c2b1d1b9-f328-4813-bf7b-530488e9f8a8"),
                            BirthDate = new DateTime(2006, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210963816",
                            Name = "Joana",
                            PhoneNumber = "33447789",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 429, DateTimeKind.Local).AddTicks(7600),
                            Status = true,
                            Surname = "Alves"
                        },
                        new
                        {
                            Id = new Guid("a3d8db68-05e1-4f11-96ac-ea4f27081b6f"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210951868",
                            Name = "Vanessa",
                            PhoneNumber = "99562341",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 429, DateTimeKind.Local).AddTicks(7635),
                            Status = true,
                            Surname = "Lisboa"
                        },
                        new
                        {
                            Id = new Guid("fa56d645-b4db-44ef-8f6f-7ae689578519"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210910951",
                            Name = "Maria",
                            PhoneNumber = "99452417",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 429, DateTimeKind.Local).AddTicks(7650),
                            Status = true,
                            Surname = "Madalena"
                        },
                        new
                        {
                            Id = new Guid("44aedd65-8d2c-456f-9101-a4cadb2d422b"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210951534",
                            Name = "João",
                            PhoneNumber = "98564712",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 429, DateTimeKind.Local).AddTicks(7674),
                            Status = true,
                            Surname = "Paulo"
                        },
                        new
                        {
                            Id = new Guid("0930b59b-1547-45b1-9af2-d093ae00872d"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210951220",
                            Name = "Ananias",
                            PhoneNumber = "33589624",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 429, DateTimeKind.Local).AddTicks(7752),
                            Status = true,
                            Surname = "Fernandes"
                        },
                        new
                        {
                            Id = new Guid("522052b4-17e5-489a-aa9e-1387e58fd4bb"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210964574",
                            Name = "José",
                            PhoneNumber = "98745122",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 429, DateTimeKind.Local).AddTicks(7769),
                            Status = true,
                            Surname = "Arimatéia"
                        },
                        new
                        {
                            Id = new Guid("9402bab4-b82c-48e6-9a50-4df91cc9d3a4"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210951212",
                            Name = "Carlos",
                            PhoneNumber = "44558896",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 429, DateTimeKind.Local).AddTicks(7782),
                            Status = true,
                            Surname = "Gaiado"
                        },
                        new
                        {
                            Id = new Guid("5ef53cec-ae66-4d85-a063-b946ef8f19c6"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "210951181",
                            Name = "Diogenes",
                            PhoneNumber = "22665588",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 429, DateTimeKind.Local).AddTicks(7795),
                            Status = true,
                            Surname = "Finético"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseSubjectId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int")
                        .HasMaxLength(9999);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "CourseSubjectId");

                    b.HasIndex("CourseSubjectId");

                    b.ToTable("StudentsCoursesSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("92fe8719-8fc6-475b-8c86-8f2935648614"),
                            CourseSubjectId = new Guid("7888445f-42ca-48b6-a0fb-0263914c02b3"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(281)
                        },
                        new
                        {
                            StudentId = new Guid("92fe8719-8fc6-475b-8c86-8f2935648614"),
                            CourseSubjectId = new Guid("ecc850c1-8eb0-4e2e-847f-fdce454284fc"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1428)
                        },
                        new
                        {
                            StudentId = new Guid("92fe8719-8fc6-475b-8c86-8f2935648614"),
                            CourseSubjectId = new Guid("62c00fe2-2158-4ebd-ade4-d3ada623b9d3"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1465)
                        },
                        new
                        {
                            StudentId = new Guid("c2b1d1b9-f328-4813-bf7b-530488e9f8a8"),
                            CourseSubjectId = new Guid("7888445f-42ca-48b6-a0fb-0263914c02b3"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1469)
                        },
                        new
                        {
                            StudentId = new Guid("c2b1d1b9-f328-4813-bf7b-530488e9f8a8"),
                            CourseSubjectId = new Guid("ecc850c1-8eb0-4e2e-847f-fdce454284fc"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1472)
                        },
                        new
                        {
                            StudentId = new Guid("c2b1d1b9-f328-4813-bf7b-530488e9f8a8"),
                            CourseSubjectId = new Guid("62c00fe2-2158-4ebd-ade4-d3ada623b9d3"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1474)
                        },
                        new
                        {
                            StudentId = new Guid("a3d8db68-05e1-4f11-96ac-ea4f27081b6f"),
                            CourseSubjectId = new Guid("7888445f-42ca-48b6-a0fb-0263914c02b3"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1477)
                        },
                        new
                        {
                            StudentId = new Guid("a3d8db68-05e1-4f11-96ac-ea4f27081b6f"),
                            CourseSubjectId = new Guid("ecc850c1-8eb0-4e2e-847f-fdce454284fc"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1479)
                        },
                        new
                        {
                            StudentId = new Guid("a3d8db68-05e1-4f11-96ac-ea4f27081b6f"),
                            CourseSubjectId = new Guid("62c00fe2-2158-4ebd-ade4-d3ada623b9d3"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1481)
                        },
                        new
                        {
                            StudentId = new Guid("fa56d645-b4db-44ef-8f6f-7ae689578519"),
                            CourseSubjectId = new Guid("5695ff8f-eb83-41b6-abd2-bde45b34a1f3"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1484)
                        },
                        new
                        {
                            StudentId = new Guid("fa56d645-b4db-44ef-8f6f-7ae689578519"),
                            CourseSubjectId = new Guid("ae5b9cbf-6a0b-4cf5-9c79-1776264e250c"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1486)
                        },
                        new
                        {
                            StudentId = new Guid("44aedd65-8d2c-456f-9101-a4cadb2d422b"),
                            CourseSubjectId = new Guid("5695ff8f-eb83-41b6-abd2-bde45b34a1f3"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1489)
                        },
                        new
                        {
                            StudentId = new Guid("44aedd65-8d2c-456f-9101-a4cadb2d422b"),
                            CourseSubjectId = new Guid("ae5b9cbf-6a0b-4cf5-9c79-1776264e250c"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1491)
                        },
                        new
                        {
                            StudentId = new Guid("0930b59b-1547-45b1-9af2-d093ae00872d"),
                            CourseSubjectId = new Guid("5695ff8f-eb83-41b6-abd2-bde45b34a1f3"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1494)
                        },
                        new
                        {
                            StudentId = new Guid("0930b59b-1547-45b1-9af2-d093ae00872d"),
                            CourseSubjectId = new Guid("ae5b9cbf-6a0b-4cf5-9c79-1776264e250c"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1496)
                        },
                        new
                        {
                            StudentId = new Guid("522052b4-17e5-489a-aa9e-1387e58fd4bb"),
                            CourseSubjectId = new Guid("5f867828-a9a1-4e14-ade7-1e98c601eda1"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1499)
                        },
                        new
                        {
                            StudentId = new Guid("522052b4-17e5-489a-aa9e-1387e58fd4bb"),
                            CourseSubjectId = new Guid("3bbe57c3-0e30-48c3-84bf-9360939530a2"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1501)
                        },
                        new
                        {
                            StudentId = new Guid("522052b4-17e5-489a-aa9e-1387e58fd4bb"),
                            CourseSubjectId = new Guid("a4abb96d-e7b0-412f-bc08-68f9c7ce260a"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1504)
                        },
                        new
                        {
                            StudentId = new Guid("9402bab4-b82c-48e6-9a50-4df91cc9d3a4"),
                            CourseSubjectId = new Guid("5f867828-a9a1-4e14-ade7-1e98c601eda1"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1506)
                        },
                        new
                        {
                            StudentId = new Guid("9402bab4-b82c-48e6-9a50-4df91cc9d3a4"),
                            CourseSubjectId = new Guid("3bbe57c3-0e30-48c3-84bf-9360939530a2"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1509)
                        },
                        new
                        {
                            StudentId = new Guid("9402bab4-b82c-48e6-9a50-4df91cc9d3a4"),
                            CourseSubjectId = new Guid("a4abb96d-e7b0-412f-bc08-68f9c7ce260a"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1511)
                        },
                        new
                        {
                            StudentId = new Guid("5ef53cec-ae66-4d85-a063-b946ef8f19c6"),
                            CourseSubjectId = new Guid("5f867828-a9a1-4e14-ade7-1e98c601eda1"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1513)
                        },
                        new
                        {
                            StudentId = new Guid("5ef53cec-ae66-4d85-a063-b946ef8f19c6"),
                            CourseSubjectId = new Guid("3bbe57c3-0e30-48c3-84bf-9360939530a2"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1516)
                        },
                        new
                        {
                            StudentId = new Guid("5ef53cec-ae66-4d85-a063-b946ef8f19c6"),
                            CourseSubjectId = new Guid("a4abb96d-e7b0-412f-bc08-68f9c7ce260a"),
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 432, DateTimeKind.Local).AddTicks(1519)
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66a6fc32-ee2c-4502-994a-660f98105d95"),
                            Name = "Matemática",
                            TeacherId = new Guid("a3ee4c51-8b23-4af3-8e1d-19f781203aa7")
                        },
                        new
                        {
                            Id = new Guid("b93d4f66-69cf-4300-b0e4-f8507c51cc7f"),
                            Name = "Limpeza de Gabinete",
                            TeacherId = new Guid("0ddb6a1b-a88f-46ff-afbd-2d9705088c8a")
                        },
                        new
                        {
                            Id = new Guid("419b3939-ec99-4d07-9cde-3ca420f4e499"),
                            Name = "Português",
                            TeacherId = new Guid("ad9a1002-3cea-4b38-a376-1473ff8b076a")
                        },
                        new
                        {
                            Id = new Guid("9093635c-ad8a-4eaf-9066-460dc2896dda"),
                            Name = "Arquitetura de Servidores",
                            TeacherId = new Guid("e4e0b72d-84db-4a96-86f8-423f868be140")
                        },
                        new
                        {
                            Id = new Guid("b2a786c2-a9fb-4c81-83d7-3fd7f13f4463"),
                            Name = "Programação",
                            TeacherId = new Guid("1ec49154-76bc-44b4-b7bd-0f641d59f0bf")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3ee4c51-8b23-4af3-8e1d-19f781203aa7"),
                            Enrollment = "210951118",
                            Name = "José",
                            PhoneNumber = "44778899",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 426, DateTimeKind.Local).AddTicks(546),
                            Status = true,
                            Surname = "Roberto"
                        },
                        new
                        {
                            Id = new Guid("0ddb6a1b-a88f-46ff-afbd-2d9705088c8a"),
                            Enrollment = "210914515",
                            Name = "Carlos",
                            PhoneNumber = "33568941",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 426, DateTimeKind.Local).AddTicks(1893),
                            Status = true,
                            Surname = "Eduardo"
                        },
                        new
                        {
                            Id = new Guid("ad9a1002-3cea-4b38-a376-1473ff8b076a"),
                            Enrollment = "210951512",
                            Name = "Manuel",
                            PhoneNumber = "99587462",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 426, DateTimeKind.Local).AddTicks(1955),
                            Status = true,
                            Surname = "Nobre"
                        },
                        new
                        {
                            Id = new Guid("e4e0b72d-84db-4a96-86f8-423f868be140"),
                            Enrollment = "210951774",
                            Name = "João",
                            PhoneNumber = "33506987",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 426, DateTimeKind.Local).AddTicks(1971),
                            Status = true,
                            Surname = "Olavo"
                        },
                        new
                        {
                            Id = new Guid("1ec49154-76bc-44b4-b7bd-0f641d59f0bf"),
                            Enrollment = "210951212",
                            Name = "Lucas",
                            PhoneNumber = "33214896",
                            StartDate = new DateTime(2021, 4, 9, 20, 0, 59, 426, DateTimeKind.Local).AddTicks(1984),
                            Status = true,
                            Surname = "Ribas"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Course", "Course")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Subject", "Subject")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.CourseSubject", "CourseSubject")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("CourseSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Student", "Student")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Teacher", "Teacher")
                        .WithMany("Subject")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
