// <auto-generated />
using System;
using EpsSchool.infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EpsSchool.Infra.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20210406225001_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EpsSchool.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3cc3945-3887-4a1e-a0df-eb4be8466572"),
                            Name = "Informatica"
                        },
                        new
                        {
                            Id = new Guid("d2778826-36f9-4406-a01f-1200ad2f8e7f"),
                            Name = "Manutenção de Micros"
                        },
                        new
                        {
                            Id = new Guid("819dd682-ae3e-4d2d-914b-d865c15dbb08"),
                            Name = "Redes de Computadores"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CoursesSubjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a517371e-a838-4ab5-84dc-0c9f6fef6503"),
                            CourseId = new Guid("b3cc3945-3887-4a1e-a0df-eb4be8466572"),
                            SubjectId = new Guid("1cb8021a-acf2-4338-94b0-91a732cb9312")
                        },
                        new
                        {
                            Id = new Guid("11d49b82-dc77-431a-9a36-0e4969bee7ab"),
                            CourseId = new Guid("b3cc3945-3887-4a1e-a0df-eb4be8466572"),
                            SubjectId = new Guid("0149899a-f860-4cf2-91bc-fbace42a8671")
                        },
                        new
                        {
                            Id = new Guid("12c28ec5-bf08-46e1-a833-2517ed613738"),
                            CourseId = new Guid("b3cc3945-3887-4a1e-a0df-eb4be8466572"),
                            SubjectId = new Guid("9af66b65-f95b-4002-93b2-3016f023ba26")
                        },
                        new
                        {
                            Id = new Guid("d7b97ab0-124a-4b6c-87c9-a5c61e12107f"),
                            CourseId = new Guid("d2778826-36f9-4406-a01f-1200ad2f8e7f"),
                            SubjectId = new Guid("34a42bd6-2911-42b6-b22a-e4e53fcb3621")
                        },
                        new
                        {
                            Id = new Guid("1ebac466-fae2-4944-9540-ffa47997d45e"),
                            CourseId = new Guid("d2778826-36f9-4406-a01f-1200ad2f8e7f"),
                            SubjectId = new Guid("0149899a-f860-4cf2-91bc-fbace42a8671")
                        },
                        new
                        {
                            Id = new Guid("49a407a3-44cb-4c6a-9970-b943e1d2b068"),
                            CourseId = new Guid("819dd682-ae3e-4d2d-914b-d865c15dbb08"),
                            SubjectId = new Guid("1cb8021a-acf2-4338-94b0-91a732cb9312")
                        },
                        new
                        {
                            Id = new Guid("3d68ac1d-e91b-4b90-9424-9e8a9ae88eee"),
                            CourseId = new Guid("819dd682-ae3e-4d2d-914b-d865c15dbb08"),
                            SubjectId = new Guid("0149899a-f860-4cf2-91bc-fbace42a8671")
                        },
                        new
                        {
                            Id = new Guid("8612e33a-1540-46a2-ab61-d4709b078037"),
                            CourseId = new Guid("819dd682-ae3e-4d2d-914b-d865c15dbb08"),
                            SubjectId = new Guid("4d240841-08b0-4bc6-8b53-35e8d370ad9b")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("636b8127-2ea5-43aa-9927-c9f9d416d81b"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21060102",
                            Name = "Joana",
                            PhoneNumber = "33556699",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(5725),
                            Status = true,
                            Surname = "Alves"
                        },
                        new
                        {
                            Id = new Guid("fe7f4c67-ac16-4a34-863a-aaf558da73dd"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21060166",
                            Name = "Fernanda",
                            PhoneNumber = "33447789",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(7885),
                            Status = true,
                            Surname = "Silva"
                        },
                        new
                        {
                            Id = new Guid("2ba7c6f5-a760-457c-b313-63840d466e2c"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21060959",
                            Name = "Vanessa",
                            PhoneNumber = "99562341",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(7973),
                            Status = true,
                            Surname = "Lisboa"
                        },
                        new
                        {
                            Id = new Guid("b98f7a83-c82f-46c9-b143-9bf155c3993f"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21068265",
                            Name = "Maria",
                            PhoneNumber = "99452417",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(7993),
                            Status = true,
                            Surname = "Madalena"
                        },
                        new
                        {
                            Id = new Guid("8ede74ff-2d41-4ab3-92b5-f97856922c34"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21060200",
                            Name = "João",
                            PhoneNumber = "98564712",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(8014),
                            Status = true,
                            Surname = "Paulo"
                        },
                        new
                        {
                            Id = new Guid("b41eabe2-afeb-41d5-94b4-396974b31bce"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21061391",
                            Name = "Ananias",
                            PhoneNumber = "33589624",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(8033),
                            Status = true,
                            Surname = "Fernandes"
                        },
                        new
                        {
                            Id = new Guid("3091bd0a-ccd5-4522-9ea1-2dd352bc7dac"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21061826",
                            Name = "José",
                            PhoneNumber = "98745122",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(8051),
                            Status = true,
                            Surname = "Arimatéia"
                        },
                        new
                        {
                            Id = new Guid("6b4d6ee5-7e6a-4921-b0dc-56cb4a95d18c"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21061709",
                            Name = "Carlos",
                            PhoneNumber = "44558896",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(8092),
                            Status = true,
                            Surname = "Gaiado"
                        },
                        new
                        {
                            Id = new Guid("13c86ed1-546b-409f-b651-49ab0880ea57"),
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "21060134",
                            Name = "Diogenes",
                            PhoneNumber = "22665588",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(8114),
                            Status = true,
                            Surname = "Finético"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseSubjectId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int")
                        .HasMaxLength(9999);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "CourseSubjectId");

                    b.HasIndex("CourseSubjectId");

                    b.ToTable("StudentsCoursesSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("636b8127-2ea5-43aa-9927-c9f9d416d81b"),
                            CourseSubjectId = new Guid("a517371e-a838-4ab5-84dc-0c9f6fef6503"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(8001)
                        },
                        new
                        {
                            StudentId = new Guid("636b8127-2ea5-43aa-9927-c9f9d416d81b"),
                            CourseSubjectId = new Guid("11d49b82-dc77-431a-9a36-0e4969bee7ab"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9161)
                        },
                        new
                        {
                            StudentId = new Guid("636b8127-2ea5-43aa-9927-c9f9d416d81b"),
                            CourseSubjectId = new Guid("12c28ec5-bf08-46e1-a833-2517ed613738"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9197)
                        },
                        new
                        {
                            StudentId = new Guid("fe7f4c67-ac16-4a34-863a-aaf558da73dd"),
                            CourseSubjectId = new Guid("a517371e-a838-4ab5-84dc-0c9f6fef6503"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9201)
                        },
                        new
                        {
                            StudentId = new Guid("fe7f4c67-ac16-4a34-863a-aaf558da73dd"),
                            CourseSubjectId = new Guid("11d49b82-dc77-431a-9a36-0e4969bee7ab"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9204)
                        },
                        new
                        {
                            StudentId = new Guid("fe7f4c67-ac16-4a34-863a-aaf558da73dd"),
                            CourseSubjectId = new Guid("12c28ec5-bf08-46e1-a833-2517ed613738"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9210)
                        },
                        new
                        {
                            StudentId = new Guid("2ba7c6f5-a760-457c-b313-63840d466e2c"),
                            CourseSubjectId = new Guid("a517371e-a838-4ab5-84dc-0c9f6fef6503"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9213)
                        },
                        new
                        {
                            StudentId = new Guid("2ba7c6f5-a760-457c-b313-63840d466e2c"),
                            CourseSubjectId = new Guid("11d49b82-dc77-431a-9a36-0e4969bee7ab"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9215)
                        },
                        new
                        {
                            StudentId = new Guid("2ba7c6f5-a760-457c-b313-63840d466e2c"),
                            CourseSubjectId = new Guid("12c28ec5-bf08-46e1-a833-2517ed613738"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9218)
                        },
                        new
                        {
                            StudentId = new Guid("b98f7a83-c82f-46c9-b143-9bf155c3993f"),
                            CourseSubjectId = new Guid("d7b97ab0-124a-4b6c-87c9-a5c61e12107f"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9222)
                        },
                        new
                        {
                            StudentId = new Guid("b98f7a83-c82f-46c9-b143-9bf155c3993f"),
                            CourseSubjectId = new Guid("1ebac466-fae2-4944-9540-ffa47997d45e"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9224)
                        },
                        new
                        {
                            StudentId = new Guid("8ede74ff-2d41-4ab3-92b5-f97856922c34"),
                            CourseSubjectId = new Guid("d7b97ab0-124a-4b6c-87c9-a5c61e12107f"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9227)
                        },
                        new
                        {
                            StudentId = new Guid("8ede74ff-2d41-4ab3-92b5-f97856922c34"),
                            CourseSubjectId = new Guid("1ebac466-fae2-4944-9540-ffa47997d45e"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9229)
                        },
                        new
                        {
                            StudentId = new Guid("b41eabe2-afeb-41d5-94b4-396974b31bce"),
                            CourseSubjectId = new Guid("d7b97ab0-124a-4b6c-87c9-a5c61e12107f"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9231)
                        },
                        new
                        {
                            StudentId = new Guid("b41eabe2-afeb-41d5-94b4-396974b31bce"),
                            CourseSubjectId = new Guid("1ebac466-fae2-4944-9540-ffa47997d45e"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9234)
                        },
                        new
                        {
                            StudentId = new Guid("3091bd0a-ccd5-4522-9ea1-2dd352bc7dac"),
                            CourseSubjectId = new Guid("49a407a3-44cb-4c6a-9970-b943e1d2b068"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9236)
                        },
                        new
                        {
                            StudentId = new Guid("3091bd0a-ccd5-4522-9ea1-2dd352bc7dac"),
                            CourseSubjectId = new Guid("3d68ac1d-e91b-4b90-9424-9e8a9ae88eee"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9238)
                        },
                        new
                        {
                            StudentId = new Guid("3091bd0a-ccd5-4522-9ea1-2dd352bc7dac"),
                            CourseSubjectId = new Guid("8612e33a-1540-46a2-ab61-d4709b078037"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9302)
                        },
                        new
                        {
                            StudentId = new Guid("6b4d6ee5-7e6a-4921-b0dc-56cb4a95d18c"),
                            CourseSubjectId = new Guid("49a407a3-44cb-4c6a-9970-b943e1d2b068"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9307)
                        },
                        new
                        {
                            StudentId = new Guid("6b4d6ee5-7e6a-4921-b0dc-56cb4a95d18c"),
                            CourseSubjectId = new Guid("3d68ac1d-e91b-4b90-9424-9e8a9ae88eee"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9310)
                        },
                        new
                        {
                            StudentId = new Guid("6b4d6ee5-7e6a-4921-b0dc-56cb4a95d18c"),
                            CourseSubjectId = new Guid("8612e33a-1540-46a2-ab61-d4709b078037"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9312)
                        },
                        new
                        {
                            StudentId = new Guid("13c86ed1-546b-409f-b651-49ab0880ea57"),
                            CourseSubjectId = new Guid("49a407a3-44cb-4c6a-9970-b943e1d2b068"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9315)
                        },
                        new
                        {
                            StudentId = new Guid("13c86ed1-546b-409f-b651-49ab0880ea57"),
                            CourseSubjectId = new Guid("3d68ac1d-e91b-4b90-9424-9e8a9ae88eee"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9317)
                        },
                        new
                        {
                            StudentId = new Guid("13c86ed1-546b-409f-b651-49ab0880ea57"),
                            CourseSubjectId = new Guid("8612e33a-1540-46a2-ab61-d4709b078037"),
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 17, DateTimeKind.Local).AddTicks(9319)
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Workload")
                        .HasColumnType("int")
                        .HasMaxLength(9999);

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1cb8021a-acf2-4338-94b0-91a732cb9312"),
                            Name = "Matemática",
                            TeacherId = new Guid("1cdf6fff-3d53-4e96-a8f0-398ce6220694")
                        },
                        new
                        {
                            Id = new Guid("34a42bd6-2911-42b6-b22a-e4e53fcb3621"),
                            Name = "Limpeza de Gabinete",
                            TeacherId = new Guid("c4834f2e-37a3-45af-adfd-5abf955f978b")
                        },
                        new
                        {
                            Id = new Guid("0149899a-f860-4cf2-91bc-fbace42a8671"),
                            Name = "Português",
                            TeacherId = new Guid("82b75ab5-e90b-42c1-9202-b8c2d0523717")
                        },
                        new
                        {
                            Id = new Guid("4d240841-08b0-4bc6-8b53-35e8d370ad9b"),
                            Name = "Arquitetura de Servidores",
                            TeacherId = new Guid("bff67666-ff36-4ac7-9772-72dca089f6a8")
                        },
                        new
                        {
                            Id = new Guid("9af66b65-f95b-4002-93b2-3016f023ba26"),
                            Name = "Programação",
                            TeacherId = new Guid("8d0c4a69-d717-4806-aa19-844472b19338")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1cdf6fff-3d53-4e96-a8f0-398ce6220694"),
                            Enrollment = "21061249",
                            Name = "José",
                            PhoneNumber = "44778899",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(8722),
                            Status = true,
                            Surname = "Roberto"
                        },
                        new
                        {
                            Id = new Guid("c4834f2e-37a3-45af-adfd-5abf955f978b"),
                            Enrollment = "21060124",
                            Name = "Carlos",
                            PhoneNumber = "33568941",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(8777),
                            Status = true,
                            Surname = "Eduardo"
                        },
                        new
                        {
                            Id = new Guid("82b75ab5-e90b-42c1-9202-b8c2d0523717"),
                            Enrollment = "21063686",
                            Name = "Manuel",
                            PhoneNumber = "99587462",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(8798),
                            Status = true,
                            Surname = "Nobre"
                        },
                        new
                        {
                            Id = new Guid("bff67666-ff36-4ac7-9772-72dca089f6a8"),
                            Enrollment = "21060211",
                            Name = "João",
                            PhoneNumber = "33506987",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(8819),
                            Status = true,
                            Surname = "Olavo"
                        },
                        new
                        {
                            Id = new Guid("8d0c4a69-d717-4806-aa19-844472b19338"),
                            Enrollment = "21060118",
                            Name = "Lucas",
                            PhoneNumber = "33214896",
                            StartDate = new DateTime(2021, 4, 6, 19, 50, 1, 7, DateTimeKind.Local).AddTicks(8840),
                            Status = true,
                            Surname = "Ribas"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Course", "Course")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Subject", "Subject")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.CourseSubject", "CourseSubject")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("CourseSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Student", "Student")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Teacher", "Teacher")
                        .WithMany("Subject")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
