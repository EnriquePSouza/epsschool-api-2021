// <auto-generated />
using System;
using EpsSchool.infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EpsSchool.Infra.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20210403213018_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EpsSchool.Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Informatica"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manutenção de Micros"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Redes de Computadores"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CoursesSubjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 2,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 2,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 3,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 3,
                            SubjectId = 4
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<int>("Registration")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Joana",
                            PhoneNumber = "33556699",
                            Registration = 1,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 821, DateTimeKind.Local).AddTicks(1314),
                            Status = true,
                            Surname = "Alves"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fernanda",
                            PhoneNumber = "33447789",
                            Registration = 2,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 821, DateTimeKind.Local).AddTicks(2525),
                            Status = true,
                            Surname = "Silva"
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vanessa",
                            PhoneNumber = "99562341",
                            Registration = 3,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 821, DateTimeKind.Local).AddTicks(3054),
                            Status = true,
                            Surname = "Lisboa"
                        },
                        new
                        {
                            Id = 4,
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Maria",
                            PhoneNumber = "99452417",
                            Registration = 4,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 821, DateTimeKind.Local).AddTicks(3491),
                            Status = true,
                            Surname = "Madalena"
                        },
                        new
                        {
                            Id = 5,
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "João",
                            PhoneNumber = "98564712",
                            Registration = 5,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 821, DateTimeKind.Local).AddTicks(3994),
                            Status = true,
                            Surname = "Paulo"
                        },
                        new
                        {
                            Id = 6,
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ananias",
                            PhoneNumber = "33589624",
                            Registration = 6,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 821, DateTimeKind.Local).AddTicks(4498),
                            Status = true,
                            Surname = "Fernandes"
                        },
                        new
                        {
                            Id = 7,
                            Birthdate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "José",
                            PhoneNumber = "98745122",
                            Registration = 7,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 821, DateTimeKind.Local).AddTicks(4939),
                            Status = true,
                            Surname = "Arimatéia"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseSubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int")
                        .HasMaxLength(9999);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "CourseSubjectId");

                    b.HasIndex("CourseSubjectId");

                    b.ToTable("StudentsCoursesSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseSubjectId = 1,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(969)
                        },
                        new
                        {
                            StudentId = 2,
                            CourseSubjectId = 1,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2530)
                        },
                        new
                        {
                            StudentId = 3,
                            CourseSubjectId = 1,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2575)
                        },
                        new
                        {
                            StudentId = 1,
                            CourseSubjectId = 2,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2581)
                        },
                        new
                        {
                            StudentId = 2,
                            CourseSubjectId = 2,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2584)
                        },
                        new
                        {
                            StudentId = 3,
                            CourseSubjectId = 2,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2592)
                        },
                        new
                        {
                            StudentId = 4,
                            CourseSubjectId = 3,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2595)
                        },
                        new
                        {
                            StudentId = 5,
                            CourseSubjectId = 3,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2597)
                        },
                        new
                        {
                            StudentId = 4,
                            CourseSubjectId = 4,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2600)
                        },
                        new
                        {
                            StudentId = 5,
                            CourseSubjectId = 4,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2605)
                        },
                        new
                        {
                            StudentId = 4,
                            CourseSubjectId = 5,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2608)
                        },
                        new
                        {
                            StudentId = 5,
                            CourseSubjectId = 5,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2610)
                        },
                        new
                        {
                            StudentId = 5,
                            CourseSubjectId = 6,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2613)
                        },
                        new
                        {
                            StudentId = 6,
                            CourseSubjectId = 6,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2693)
                        },
                        new
                        {
                            StudentId = 7,
                            CourseSubjectId = 6,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2700)
                        },
                        new
                        {
                            StudentId = 5,
                            CourseSubjectId = 7,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2703)
                        },
                        new
                        {
                            StudentId = 6,
                            CourseSubjectId = 7,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2706)
                        },
                        new
                        {
                            StudentId = 7,
                            CourseSubjectId = 7,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 822, DateTimeKind.Local).AddTicks(2713)
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Workload")
                        .HasColumnType("int")
                        .HasMaxLength(9999);

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Matemática",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Limpeza de Gabinete",
                            TeacherId = 2,
                            Workload = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Português",
                            TeacherId = 3,
                            Workload = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Arquitetura de Servidores",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<int>("Registration")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "José",
                            PhoneNumber = "44778899",
                            Registration = 1,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 816, DateTimeKind.Local).AddTicks(2761),
                            Status = true,
                            Surname = "Roberto"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Carlos",
                            PhoneNumber = "33568941",
                            Registration = 2,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 817, DateTimeKind.Local).AddTicks(4371),
                            Status = true,
                            Surname = "Eduardo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Manuel",
                            PhoneNumber = "99587462",
                            Registration = 3,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 817, DateTimeKind.Local).AddTicks(4469),
                            Status = true,
                            Surname = "Nobre"
                        },
                        new
                        {
                            Id = 4,
                            Name = "João",
                            PhoneNumber = "33506987",
                            Registration = 4,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 817, DateTimeKind.Local).AddTicks(4475),
                            Status = true,
                            Surname = "Olavo"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Lucas",
                            PhoneNumber = "33214896",
                            Registration = 5,
                            StartDate = new DateTime(2021, 4, 3, 18, 30, 17, 817, DateTimeKind.Local).AddTicks(4478),
                            Status = true,
                            Surname = "Ribas"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Course", "Course")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Subject", "Subject")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.CourseSubject", "CourseSubject")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("CourseSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Student", "Student")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Teacher", "Teacher")
                        .WithMany("Subject")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
