// <auto-generated />
using System;
using EpsSchool.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EpsSchool.Infra.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20210411214400_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EpsSchool.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3a7f33f-7937-4622-a679-0420ac41f233"),
                            Name = "Informatica"
                        },
                        new
                        {
                            Id = new Guid("e4313f4d-485b-4bab-94f8-c0b8e455198d"),
                            Name = "Manutenção de Micros"
                        },
                        new
                        {
                            Id = new Guid("f523f8b7-7a68-4dc9-a256-fbca293f329b"),
                            Name = "Redes de Computadores"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CoursesSubjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1f8f10d-2822-44df-a173-9bf891452e80"),
                            CourseId = new Guid("a3a7f33f-7937-4622-a679-0420ac41f233"),
                            SubjectId = new Guid("f765469e-fe01-4d1b-9e43-6224604ac922")
                        },
                        new
                        {
                            Id = new Guid("1d04be58-530b-4505-926d-edf5587c9e9e"),
                            CourseId = new Guid("a3a7f33f-7937-4622-a679-0420ac41f233"),
                            SubjectId = new Guid("7f912da8-d20d-44f1-9c00-80b9b74eae73")
                        },
                        new
                        {
                            Id = new Guid("55639a4f-b01f-40a5-9821-6d1f70c81451"),
                            CourseId = new Guid("a3a7f33f-7937-4622-a679-0420ac41f233"),
                            SubjectId = new Guid("8abeeae2-ca9f-4934-8509-8ae96c81a71c")
                        },
                        new
                        {
                            Id = new Guid("7a03be26-2cca-4b92-8e01-001f2122e20a"),
                            CourseId = new Guid("e4313f4d-485b-4bab-94f8-c0b8e455198d"),
                            SubjectId = new Guid("80827df4-a4be-48db-a445-cba857321da7")
                        },
                        new
                        {
                            Id = new Guid("a926bd0d-2202-4533-92b2-a5c76bd6a50e"),
                            CourseId = new Guid("e4313f4d-485b-4bab-94f8-c0b8e455198d"),
                            SubjectId = new Guid("7f912da8-d20d-44f1-9c00-80b9b74eae73")
                        },
                        new
                        {
                            Id = new Guid("bd7b773d-e950-477f-96f3-278a82a084af"),
                            CourseId = new Guid("f523f8b7-7a68-4dc9-a256-fbca293f329b"),
                            SubjectId = new Guid("f765469e-fe01-4d1b-9e43-6224604ac922")
                        },
                        new
                        {
                            Id = new Guid("dfac14a5-df83-4a86-a26e-f5e005f068c6"),
                            CourseId = new Guid("f523f8b7-7a68-4dc9-a256-fbca293f329b"),
                            SubjectId = new Guid("7f912da8-d20d-44f1-9c00-80b9b74eae73")
                        },
                        new
                        {
                            Id = new Guid("b72c7526-ea98-4136-a70a-be79e84353ac"),
                            CourseId = new Guid("f523f8b7-7a68-4dc9-a256-fbca293f329b"),
                            SubjectId = new Guid("0c0e2723-96c2-4983-982e-64f319e44e8d")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("730b5f0f-96ec-42dd-8c1f-2915788ff391"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "211151125",
                            FirstName = "Joana",
                            LastName = "Alves",
                            PhoneNumber = "33556699",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 261, DateTimeKind.Local).AddTicks(9419),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("3ff827a4-5d2b-4169-a93b-828c93d8fe98"),
                            BirthDate = new DateTime(2006, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "211117939",
                            FirstName = "Joana",
                            LastName = "Alves",
                            PhoneNumber = "33447789",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 261, DateTimeKind.Local).AddTicks(9869),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("cf077561-bb0b-4a88-8dfa-de65f35438ca"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "211171154",
                            FirstName = "Vanessa",
                            LastName = "Lisboa",
                            PhoneNumber = "99562341",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 261, DateTimeKind.Local).AddTicks(9899),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("db9021d2-63a2-4d20-8460-d27a5b646c45"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "211151145",
                            FirstName = "Maria",
                            LastName = "Madalena",
                            PhoneNumber = "99452417",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 261, DateTimeKind.Local).AddTicks(9916),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("545c8ff3-1f53-4d1c-bfc9-7a0a40db6deb"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "211151128",
                            FirstName = "João",
                            LastName = "Paulo",
                            PhoneNumber = "98564712",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 261, DateTimeKind.Local).AddTicks(9929),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("6c6e86c2-d6d0-47b6-bcdd-75cd3dbca562"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "211151207",
                            FirstName = "Ananias",
                            LastName = "Fernandes",
                            PhoneNumber = "33589624",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 261, DateTimeKind.Local).AddTicks(9942),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("1a84b1bc-6d60-4371-84e7-3383476602fc"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "211165040",
                            FirstName = "José",
                            LastName = "Arimatéia",
                            PhoneNumber = "98745122",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 261, DateTimeKind.Local).AddTicks(9954),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("58efa297-6a8c-402d-af72-f982d667ad7c"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "211151426",
                            FirstName = "Carlos",
                            LastName = "Gaiado",
                            PhoneNumber = "44558896",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 261, DateTimeKind.Local).AddTicks(9975),
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("256c8f1d-38dd-4f47-ac39-3386f77a3d08"),
                            BirthDate = new DateTime(2005, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrollment = "211151467",
                            FirstName = "Diogenes",
                            LastName = "Finético",
                            PhoneNumber = "22665588",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 261, DateTimeKind.Local).AddTicks(9989),
                            Status = true
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CourseSubjectId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int")
                        .HasMaxLength(9999);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "CourseSubjectId");

                    b.HasIndex("CourseSubjectId");

                    b.ToTable("StudentsCoursesSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("730b5f0f-96ec-42dd-8c1f-2915788ff391"),
                            CourseSubjectId = new Guid("f1f8f10d-2822-44df-a173-9bf891452e80"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(2160)
                        },
                        new
                        {
                            StudentId = new Guid("730b5f0f-96ec-42dd-8c1f-2915788ff391"),
                            CourseSubjectId = new Guid("1d04be58-530b-4505-926d-edf5587c9e9e"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3295)
                        },
                        new
                        {
                            StudentId = new Guid("730b5f0f-96ec-42dd-8c1f-2915788ff391"),
                            CourseSubjectId = new Guid("55639a4f-b01f-40a5-9821-6d1f70c81451"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3329)
                        },
                        new
                        {
                            StudentId = new Guid("3ff827a4-5d2b-4169-a93b-828c93d8fe98"),
                            CourseSubjectId = new Guid("f1f8f10d-2822-44df-a173-9bf891452e80"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3333)
                        },
                        new
                        {
                            StudentId = new Guid("3ff827a4-5d2b-4169-a93b-828c93d8fe98"),
                            CourseSubjectId = new Guid("1d04be58-530b-4505-926d-edf5587c9e9e"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3335)
                        },
                        new
                        {
                            StudentId = new Guid("3ff827a4-5d2b-4169-a93b-828c93d8fe98"),
                            CourseSubjectId = new Guid("55639a4f-b01f-40a5-9821-6d1f70c81451"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3338)
                        },
                        new
                        {
                            StudentId = new Guid("cf077561-bb0b-4a88-8dfa-de65f35438ca"),
                            CourseSubjectId = new Guid("f1f8f10d-2822-44df-a173-9bf891452e80"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3340)
                        },
                        new
                        {
                            StudentId = new Guid("cf077561-bb0b-4a88-8dfa-de65f35438ca"),
                            CourseSubjectId = new Guid("1d04be58-530b-4505-926d-edf5587c9e9e"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3342)
                        },
                        new
                        {
                            StudentId = new Guid("cf077561-bb0b-4a88-8dfa-de65f35438ca"),
                            CourseSubjectId = new Guid("55639a4f-b01f-40a5-9821-6d1f70c81451"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3344)
                        },
                        new
                        {
                            StudentId = new Guid("db9021d2-63a2-4d20-8460-d27a5b646c45"),
                            CourseSubjectId = new Guid("7a03be26-2cca-4b92-8e01-001f2122e20a"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3347)
                        },
                        new
                        {
                            StudentId = new Guid("db9021d2-63a2-4d20-8460-d27a5b646c45"),
                            CourseSubjectId = new Guid("a926bd0d-2202-4533-92b2-a5c76bd6a50e"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3349)
                        },
                        new
                        {
                            StudentId = new Guid("545c8ff3-1f53-4d1c-bfc9-7a0a40db6deb"),
                            CourseSubjectId = new Guid("7a03be26-2cca-4b92-8e01-001f2122e20a"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3351)
                        },
                        new
                        {
                            StudentId = new Guid("545c8ff3-1f53-4d1c-bfc9-7a0a40db6deb"),
                            CourseSubjectId = new Guid("a926bd0d-2202-4533-92b2-a5c76bd6a50e"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3353)
                        },
                        new
                        {
                            StudentId = new Guid("6c6e86c2-d6d0-47b6-bcdd-75cd3dbca562"),
                            CourseSubjectId = new Guid("7a03be26-2cca-4b92-8e01-001f2122e20a"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3356)
                        },
                        new
                        {
                            StudentId = new Guid("6c6e86c2-d6d0-47b6-bcdd-75cd3dbca562"),
                            CourseSubjectId = new Guid("a926bd0d-2202-4533-92b2-a5c76bd6a50e"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3358)
                        },
                        new
                        {
                            StudentId = new Guid("1a84b1bc-6d60-4371-84e7-3383476602fc"),
                            CourseSubjectId = new Guid("bd7b773d-e950-477f-96f3-278a82a084af"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3360)
                        },
                        new
                        {
                            StudentId = new Guid("1a84b1bc-6d60-4371-84e7-3383476602fc"),
                            CourseSubjectId = new Guid("dfac14a5-df83-4a86-a26e-f5e005f068c6"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3363)
                        },
                        new
                        {
                            StudentId = new Guid("1a84b1bc-6d60-4371-84e7-3383476602fc"),
                            CourseSubjectId = new Guid("b72c7526-ea98-4136-a70a-be79e84353ac"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3365)
                        },
                        new
                        {
                            StudentId = new Guid("58efa297-6a8c-402d-af72-f982d667ad7c"),
                            CourseSubjectId = new Guid("bd7b773d-e950-477f-96f3-278a82a084af"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3448)
                        },
                        new
                        {
                            StudentId = new Guid("58efa297-6a8c-402d-af72-f982d667ad7c"),
                            CourseSubjectId = new Guid("dfac14a5-df83-4a86-a26e-f5e005f068c6"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3453)
                        },
                        new
                        {
                            StudentId = new Guid("58efa297-6a8c-402d-af72-f982d667ad7c"),
                            CourseSubjectId = new Guid("b72c7526-ea98-4136-a70a-be79e84353ac"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3456)
                        },
                        new
                        {
                            StudentId = new Guid("256c8f1d-38dd-4f47-ac39-3386f77a3d08"),
                            CourseSubjectId = new Guid("bd7b773d-e950-477f-96f3-278a82a084af"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3458)
                        },
                        new
                        {
                            StudentId = new Guid("256c8f1d-38dd-4f47-ac39-3386f77a3d08"),
                            CourseSubjectId = new Guid("dfac14a5-df83-4a86-a26e-f5e005f068c6"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3460)
                        },
                        new
                        {
                            StudentId = new Guid("256c8f1d-38dd-4f47-ac39-3386f77a3d08"),
                            CourseSubjectId = new Guid("b72c7526-ea98-4136-a70a-be79e84353ac"),
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 264, DateTimeKind.Local).AddTicks(3463)
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f765469e-fe01-4d1b-9e43-6224604ac922"),
                            Name = "Matemática"
                        },
                        new
                        {
                            Id = new Guid("80827df4-a4be-48db-a445-cba857321da7"),
                            Name = "Limpeza de Gabinete"
                        },
                        new
                        {
                            Id = new Guid("7f912da8-d20d-44f1-9c00-80b9b74eae73"),
                            Name = "Português"
                        },
                        new
                        {
                            Id = new Guid("0c0e2723-96c2-4983-982e-64f319e44e8d"),
                            Name = "Arquitetura de Servidores"
                        },
                        new
                        {
                            Id = new Guid("8abeeae2-ca9f-4934-8509-8ae96c81a71c"),
                            Name = "Programação"
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4")
                        .HasMaxLength(120);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("39616ebc-bbd3-42b5-9881-9f75ee7ef46a"),
                            Enrollment = "211116902",
                            FirstName = "José",
                            LastName = "Roberto",
                            PhoneNumber = "44778899",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 258, DateTimeKind.Local).AddTicks(6683),
                            Status = true,
                            SubjectId = new Guid("f765469e-fe01-4d1b-9e43-6224604ac922")
                        },
                        new
                        {
                            Id = new Guid("53d0726f-9850-45ea-9e83-ef95da18b884"),
                            Enrollment = "211112461",
                            FirstName = "Carlos",
                            LastName = "Eduardo",
                            PhoneNumber = "33568941",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 258, DateTimeKind.Local).AddTicks(8283),
                            Status = true,
                            SubjectId = new Guid("80827df4-a4be-48db-a445-cba857321da7")
                        },
                        new
                        {
                            Id = new Guid("fbf69537-b483-46ca-9071-270b23216248"),
                            Enrollment = "211151255",
                            FirstName = "Manuel",
                            LastName = "Nobre",
                            PhoneNumber = "99587462",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 258, DateTimeKind.Local).AddTicks(8464),
                            Status = true,
                            SubjectId = new Guid("7f912da8-d20d-44f1-9c00-80b9b74eae73")
                        },
                        new
                        {
                            Id = new Guid("e023f47e-0f28-4532-87c7-aaf65b1fd833"),
                            Enrollment = "211116171",
                            FirstName = "João",
                            LastName = "Olavo",
                            PhoneNumber = "33506987",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 258, DateTimeKind.Local).AddTicks(8484),
                            Status = true,
                            SubjectId = new Guid("0c0e2723-96c2-4983-982e-64f319e44e8d")
                        },
                        new
                        {
                            Id = new Guid("b4bc9d43-29dc-429d-a535-33b07778968a"),
                            Enrollment = "211151863",
                            FirstName = "Lucas",
                            LastName = "Ribas",
                            PhoneNumber = "33214896",
                            StartDate = new DateTime(2021, 4, 11, 18, 44, 0, 258, DateTimeKind.Local).AddTicks(8502),
                            Status = true,
                            SubjectId = new Guid("8abeeae2-ca9f-4934-8509-8ae96c81a71c")
                        });
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.CourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Course", "Course")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Subject", "Subject")
                        .WithMany("CoursesSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.StudentCourseSubject", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.CourseSubject", "CourseSubject")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("CourseSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Domain.Entities.Student", "Student")
                        .WithMany("StudentsCoursesSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Domain.Entities.Teacher", b =>
                {
                    b.HasOne("EpsSchool.Domain.Entities.Subject", "Subject")
                        .WithMany("Teachers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
