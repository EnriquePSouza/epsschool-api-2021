// <auto-generated />
using System;
using EpsSchool.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EpsSchool.Api.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20210327211221_initialDb")]
    partial class initialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EpsSchool.Api.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Matricula")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 569, DateTimeKind.Local).AddTicks(8430),
                            DataNascimento = new DateTime(2010, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 1,
                            Nome = "Joana",
                            Sobrenome = "Alves",
                            Telefone = "33556699"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(925),
                            DataNascimento = new DateTime(2010, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 2,
                            Nome = "Fernanda",
                            Sobrenome = "Silva",
                            Telefone = "33447789"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(1319),
                            DataNascimento = new DateTime(2010, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 3,
                            Nome = "Vanessa",
                            Sobrenome = "Lisboa",
                            Telefone = "99562341"
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(1686),
                            DataNascimento = new DateTime(2010, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 4,
                            Nome = "Maria",
                            Sobrenome = "Madalena",
                            Telefone = "99452417"
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(2044),
                            DataNascimento = new DateTime(2010, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 5,
                            Nome = "João",
                            Sobrenome = "Paulo",
                            Telefone = "98564712"
                        },
                        new
                        {
                            Id = 6,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(2408),
                            DataNascimento = new DateTime(2010, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 6,
                            Nome = "Ananias",
                            Sobrenome = "Fernandes",
                            Telefone = "33589624"
                        },
                        new
                        {
                            Id = 7,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(2811),
                            DataNascimento = new DateTime(2010, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 7,
                            Nome = "José",
                            Sobrenome = "Arimatéia",
                            Telefone = "98745122"
                        });
                });

            modelBuilder.Entity("EpsSchool.Api.Models.AlunoCursoDisciplina", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("CursoDisciplinaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Nota")
                        .HasColumnType("int");

                    b.HasKey("AlunoId", "CursoDisciplinaId");

                    b.HasIndex("CursoDisciplinaId");

                    b.ToTable("AlunosCursosDisciplinas");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            CursoDisciplinaId = 1,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(6368)
                        },
                        new
                        {
                            AlunoId = 1,
                            CursoDisciplinaId = 2,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7051)
                        },
                        new
                        {
                            AlunoId = 1,
                            CursoDisciplinaId = 3,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7078)
                        },
                        new
                        {
                            AlunoId = 2,
                            CursoDisciplinaId = 1,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7082)
                        },
                        new
                        {
                            AlunoId = 2,
                            CursoDisciplinaId = 2,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7084)
                        },
                        new
                        {
                            AlunoId = 2,
                            CursoDisciplinaId = 3,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7090)
                        },
                        new
                        {
                            AlunoId = 3,
                            CursoDisciplinaId = 4,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7092)
                        },
                        new
                        {
                            AlunoId = 3,
                            CursoDisciplinaId = 5,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7094)
                        },
                        new
                        {
                            AlunoId = 4,
                            CursoDisciplinaId = 4,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7116)
                        },
                        new
                        {
                            AlunoId = 4,
                            CursoDisciplinaId = 5,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7120)
                        },
                        new
                        {
                            AlunoId = 5,
                            CursoDisciplinaId = 4,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7122)
                        },
                        new
                        {
                            AlunoId = 5,
                            CursoDisciplinaId = 5,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7124)
                        },
                        new
                        {
                            AlunoId = 6,
                            CursoDisciplinaId = 5,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7126)
                        },
                        new
                        {
                            AlunoId = 6,
                            CursoDisciplinaId = 6,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7128)
                        },
                        new
                        {
                            AlunoId = 6,
                            CursoDisciplinaId = 7,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7130)
                        },
                        new
                        {
                            AlunoId = 7,
                            CursoDisciplinaId = 5,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7131)
                        },
                        new
                        {
                            AlunoId = 7,
                            CursoDisciplinaId = 6,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7133)
                        },
                        new
                        {
                            AlunoId = 7,
                            CursoDisciplinaId = 7,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 570, DateTimeKind.Local).AddTicks(7137)
                        });
                });

            modelBuilder.Entity("EpsSchool.Api.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Informatica"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Manutenção de Micros"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Redes de Computadores"
                        });
                });

            modelBuilder.Entity("EpsSchool.Api.Models.CursoDisciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("CursosDisciplinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CursoId = 1,
                            DisciplinaId = 1
                        },
                        new
                        {
                            Id = 2,
                            CursoId = 1,
                            DisciplinaId = 3
                        },
                        new
                        {
                            Id = 3,
                            CursoId = 1,
                            DisciplinaId = 5
                        },
                        new
                        {
                            Id = 4,
                            CursoId = 2,
                            DisciplinaId = 2
                        },
                        new
                        {
                            Id = 5,
                            CursoId = 2,
                            DisciplinaId = 3
                        },
                        new
                        {
                            Id = 6,
                            CursoId = 3,
                            DisciplinaId = 1
                        },
                        new
                        {
                            Id = 7,
                            CursoId = 3,
                            DisciplinaId = 3
                        },
                        new
                        {
                            Id = 8,
                            CursoId = 3,
                            DisciplinaId = 4
                        });
                });

            modelBuilder.Entity("EpsSchool.Api.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PrerequisitoId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrerequisitoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargaHoraria = 0,
                            Nome = "Matemática",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CargaHoraria = 0,
                            Nome = "Limpeza de Gabinete",
                            ProfessorId = 2
                        },
                        new
                        {
                            Id = 3,
                            CargaHoraria = 0,
                            Nome = "Português",
                            ProfessorId = 3
                        },
                        new
                        {
                            Id = 4,
                            CargaHoraria = 0,
                            Nome = "Arquitetura de Servidores",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 5,
                            CargaHoraria = 0,
                            Nome = "Programação",
                            ProfessorId = 5
                        });
                });

            modelBuilder.Entity("EpsSchool.Api.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Registro")
                        .HasColumnType("int");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Professores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 565, DateTimeKind.Local).AddTicks(9443),
                            DisciplinaId = 0,
                            Nome = "José",
                            Registro = 1,
                            Sobrenome = "Roberto"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 566, DateTimeKind.Local).AddTicks(8327),
                            DisciplinaId = 0,
                            Nome = "Carlos",
                            Registro = 2,
                            Sobrenome = "Eduardo"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 566, DateTimeKind.Local).AddTicks(8386),
                            DisciplinaId = 0,
                            Nome = "Manuel",
                            Registro = 3,
                            Sobrenome = "Nobre"
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 566, DateTimeKind.Local).AddTicks(8389),
                            DisciplinaId = 0,
                            Nome = "João",
                            Registro = 4,
                            Sobrenome = "Olavo"
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            DataInicio = new DateTime(2021, 3, 27, 18, 12, 20, 566, DateTimeKind.Local).AddTicks(8391),
                            DisciplinaId = 0,
                            Nome = "Lucas",
                            Registro = 5,
                            Sobrenome = "Ribas"
                        });
                });

            modelBuilder.Entity("EpsSchool.Api.Models.AlunoCursoDisciplina", b =>
                {
                    b.HasOne("EpsSchool.Api.Models.Aluno", "Aluno")
                        .WithMany("AlunosCursosDisciplinas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Api.Models.CursoDisciplina", "CursoDisciplina")
                        .WithMany("AlunosCursosDisciplinas")
                        .HasForeignKey("CursoDisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Api.Models.CursoDisciplina", b =>
                {
                    b.HasOne("EpsSchool.Api.Models.Curso", "Curso")
                        .WithMany("CursosDisciplinas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpsSchool.Api.Models.Disciplina", "Disciplina")
                        .WithMany("CursosDisciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpsSchool.Api.Models.Disciplina", b =>
                {
                    b.HasOne("EpsSchool.Api.Models.Disciplina", "Prerequisito")
                        .WithMany()
                        .HasForeignKey("PrerequisitoId");

                    b.HasOne("EpsSchool.Api.Models.Professor", "Professor")
                        .WithMany("Disciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
